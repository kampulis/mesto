(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.allClasses=e,this.form=n}var r,o;return r=t,(o=[{key:"_validateInput",value:function(e,t,n){e.validity.valid?this._hideInputError(t):(this._showInputError(e,t),this._disableButton(n)),this.form.checkValidity()&&(n.disabled=!1)}},{key:"_showInputError",value:function(e,t){t.textContent=e.validationMessage}},{key:"_disableButton",value:function(e){e.disabled=!0}},{key:"_hideInputError",value:function(e){e.textContent=""}},{key:"_addValidationsToInputs",value:function(e,t){var n=this;t.forEach((function(t){var r=t.querySelector(n.allClasses.inputSelector),o=t.querySelector(n.allClasses.inputErrorSelector);r.addEventListener("input",(function(t){n._validateInput(t.target,o,e)}))}))}},{key:"enableValidations",value:function(){var e=Array.from(this.form.querySelectorAll(this.allClasses.inputContainerSelector)),t=this.form.querySelector(this.allClasses.submitButtonSelector);this._addValidationsToInputs(t,e),n(this.allClasses)}}])&&e(r.prototype,o),t}();function n(e){Array.from(document.querySelectorAll(e.disabledButtonSelector)).forEach((function(e){e.disabled=!0}))}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.profileTitle=document.querySelector(n),this.profileSubtitle=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.profileTitle.textContent,about:this.profileSubtitle.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this.profileTitle.textContent=t,this.profileSubtitle.textContent=n}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.api,o=t.renderer,i=t.userInfo;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.api=r,this.userInfo=i,this.renderer=o,this.container=document.querySelector(n),this.onSuccess=this.onSuccess.bind(this)}var t,n;return t=e,(n=[{key:"initCards",value:function(){this.api.getInitialCards(this.onSuccess)}},{key:"onSuccess",value:function(e){this.items=e,this.render()}},{key:"render",value:function(){var e=this,t=this.userInfo.getUserInfo();this.items.forEach((function(n){var r=e.renderer(n,t);e.addItem(r)}))}},{key:"addItem",value:function(e){this.container.prepend(e)}}])&&i(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popup=document.querySelector(t),this.submitButton=this.popup.querySelector('button[type="submit"]'),this.submitButton&&(this.defaultSubmitButtonText=this.submitButton.textContent),this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){27===e.keyCode&&this.close()}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this.popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleClosePopupEsc),this.popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this.popup.querySelector(".popup__close-icon").addEventListener("click",this.close),this.popup.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}},{key:"updateSubmitButtonText",value:function(e){this.submitButton&&(this.submitButton.textContent=e)}},{key:"resetSubmitButtonText",value:function(){this.updateSubmitButtonText(this.defaultSubmitButtonText)}}])&&c(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function u(){return l(this,u),i.apply(this,arguments)}return t=u,(n=[{key:"open",value:function(e){p(y(u.prototype),"open",this).call(this);var t=this.popup.querySelector("img");t.src=e.target.src,t.alt=e.target.alt;var n=e.target.closest(".mesto-card").querySelector(".mesto-card__subtitle-name");this.popup.querySelector(".popup__text").textContent=n.textContent}}])&&f(t.prototype,n),u}(a);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).submitFormHandler=t,n.form=n.popup.querySelector("form"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this.form.querySelectorAll("input").forEach((function(t){e[t.id]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;_(w(u.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){e.updateSubmitButtonText("Сохранение..."),e.submitFormHandler(t,e._getInputValues(),(function(){e.close(),e.resetSubmitButtonText()}))}))}},{key:"close",value:function(){_(w(u.prototype),"close",this).call(this),this.form.reset()}}])&&b(t.prototype,n),u}(a);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n,r,o,i,u){var c=n.name,a=n.link,s=n.likes,l=n.id,f=n.owner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=l,this.api=t,this.name=c,this.link=a,this.likes=s,this.owner=f,this.currentUser=r,this.template=document.querySelector(o),this.handleCardClick=i,this.handleDeleteClick=u}var t,n;return t=e,(n=[{key:"_addLike",value:function(e){var t=e.target.closest(".mesto-card__subtitle-like").querySelector(".mesto-card__subtitle-icon-like");e.target.classList.contains("mesto-card__subtitle-icon_active")?this.api.updateLike(this.id,(function(n){e.target.classList.remove("mesto-card__subtitle-icon_active"),t.textContent=n.likes.length}),!0):this.api.updateLike(this.id,(function(n){e.target.classList.add("mesto-card__subtitle-icon_active"),t.textContent=n.likes.length}))}},{key:"_deleteCard",value:function(e){var t=e.target.closest(".mesto-card");this.api.deleteCard(this.id,(function(){t.remove()}))}},{key:"_onDeleteButtonClick",value:function(e){var t=this;this.handleDeleteClick((function(){t._deleteCard(e)}))}},{key:"_showPhoto",value:function(e){this.handleCardClick(e)}},{key:"_getTemplate",value:function(){return this.template.content.cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this;e.querySelector(".mesto-card__subtitle-icon").addEventListener("click",(function(e){return t._addLike(e)})),e.querySelector(".mesto-card__trash").addEventListener("click",(function(e){return t._onDeleteButtonClick(e)})),e.querySelector(".mesto-card__photo").addEventListener("click",(function(e){return t._showPhoto(e)}))}},{key:"_showTrash",value:function(e){this.currentUser.name===this.owner&&(e.querySelector(".mesto-card__trash").style.display="block")}},{key:"_showIsLiked",value:function(e){var t=this;this.likes.find((function(e){return e.name===t.currentUser.name}))&&e.querySelector(".mesto-card__subtitle-icon").classList.add("mesto-card__subtitle-icon_active")}},{key:"createMestoCard",value:function(){var e=this._getTemplate(),t=e.querySelector(".mesto-card__photo"),n=e.querySelector(".mesto-card__subtitle-icon-like");return t.src=this.link,t.alt=this.name,n.textContent=this.likes.length,e.querySelector(".mesto-card__subtitle-name").textContent=this.name,this._showTrash(e),this._showIsLiked(e),this._setEventListeners(e),e}}])&&E(t.prototype,n),e}();function j(e,t,n,r,o){return new C(W,{name:e,link:t,likes:n,id:r},o,"#mesto-card",J.open,K.open).createMestoCard()}function O(e){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function q(e,t){return(q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function T(e,t){return!t||"object"!==O(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).form=t.popup.querySelector("form"),t}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;L(x(u.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){t.preventDefault(),e.submitFormHandler(),e.close()}))}},{key:"open",value:function(e){L(x(u.prototype),"open",this).call(this),this.submitFormHandler=e}}])&&P(t.prototype,n),u}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(e){fetch(this.baseUrl+"cards",{headers:this.headers}).then((function(t){if(!t.ok)return Promise.reject("Ошибка: ".concat(t.status));t.json().then((function(t){return e(t)}))})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"getInfoAboutPeople",value:function(e){fetch(this.baseUrl+"users/me/",{headers:this.headers}).then((function(t){if(!t.ok)return Promise.reject("Ошибка: ".concat(t.status));t.json().then((function(t){return e(t)}))})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"updateEditProfile",value:function(e,t){fetch(this.baseUrl+"users/me/",{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));t()})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"updateEditAvatar",value:function(e,t){fetch(this.baseUrl+"users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((function(n){if(!n.ok)return Promise.reject("Ошибка: ".concat(n.status));t(e)})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"addNewСard",value:function(e,t){fetch(this.baseUrl+"cards",{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));e.json().then((function(e){t(e)}))})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"deleteCard",value:function(e,t){fetch(this.baseUrl+"cards/"+e,{method:"DELETE",headers:this.headers}).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));e.json().then((function(e){t(e)}))})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}},{key:"updateLike",value:function(e,t,n){fetch(this.baseUrl+"cards/likes/"+e,{method:n?"DELETE":"PUT",headers:this.headers}).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));e.json().then((function(e){t(e)}))})).catch((function(e){return Promise.reject("Ошибка: ".concat(e))}))}}])&&R(t.prototype,n),e}(),U={formSelector:".popup__input",submitButtonSelector:".popup__button",inputContainerSelector:".popup__name-container",inputSelector:".popup__name",inputErrorSelector:".popup__name.popup__name_type_err",disabledButtonSelector:".popup__container_new-card .popup__button",nameSelector:".profile__info-title"},A=document.querySelector(".profile").querySelector(".profile__button"),D=document.querySelector(".profile__button-add"),V=(document.querySelector(".mesto-card__trash"),document.querySelector(U.nameSelector)),H=document.querySelector(".profile__info-subtitle"),N=document.querySelector(".profile__foto"),F=Array.from(document.querySelectorAll(U.formSelector)),M=new o({nameSelector:U.nameSelector,aboutSelector:".profile__info-subtitle"}),J=new m(".popup.popup_type_image"),z=new g(".popup.popup_type_edit",(function(e,t,n){e.preventDefault();var r=t.name,o=t.job;M.setUserInfo({name:r,job:o}),W.updateEditProfile({name:r,about:o},n)}),M),G=new g(".popup.popup_type_new-card",(function(e,t,r){e.preventDefault();var o=t.mesto,i=t.link;W["addNewСard"]({name:o,link:i},(function(e){var t=e.name,o=e.owner,u=e.likes,c=e._id;r();var a=M.getUserInfo().name===o.name;X.addItem(j(t,i,u,c,a)),n(U)}))}),M),K=new I(".popup.popup_type_confirm"),Q=(document.querySelector(".popup_type_new-card"),new g(".popup.popup_type_update",(function(e,t,n){e.preventDefault();var r=t.link;W.updateEditAvatar(r,(function(e){n(),N.src=e}))}))),W=new B({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-26/",headers:{authorization:"82256f25-365c-46ac-aa1f-a846129f6d77","Content-Type":"application/json","Access-Control-Allow-Methods":"POST, GET, DELETE"}}),X=new u({api:W,renderer:function(e,t){return j(e.name,e.link,e.likes,e._id,t)},userInfo:M},".elements");function Y(e){var t=document.querySelector("#name"),n=document.querySelector("#job"),r=e.getUserInfo(),o=r.name,i=r.about;t.value=o,n.value=i}F.forEach((function(e){new t(U,e).enableValidations()})),J.setEventListeners(),z.setEventListeners(),G.setEventListeners(),K.setEventListeners(),Q.setEventListeners(),A.addEventListener("click",(function(){z.open(),Y(M)})),N.addEventListener("click",(function(){Q.open(),Y(M)})),D.addEventListener("click",G.open),W.getInfoAboutPeople((function(e){V.textContent=e.name,H.textContent=e.about,N.src=e.avatar,X.initCards()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,