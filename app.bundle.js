(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}e.d({},{hi:()=>G,kJ:()=>z,lH:()=>M,qi:()=>Y,eY:()=>F});var n=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.allClasses=t,this.form=document.querySelector("".concat(n," form")),this.submitButton=this.form.querySelector(t.submitButtonSelector),this.inputs=Array.from(this.form.querySelectorAll(this.allClasses.inputContainerSelector)),this.enableValidations=this.enableValidations.bind(this)}var n,o;return n=e,(o=[{key:"_validateInput",value:function(e,t){e.validity.valid?this._hideInputError(t):this._showInputError(e,t),this.toggleSubmitButtonState()}},{key:"_showInputError",value:function(e,t){t.textContent=e.validationMessage}},{key:"_disableButton",value:function(e){e.disabled=!0}},{key:"_hideInputError",value:function(e){e.textContent=""}},{key:"_addValidationsToInputs",value:function(){var e=this;this.inputs.forEach((function(t){var n=t.querySelector(e.allClasses.inputSelector),o=t.querySelector(e.allClasses.inputErrorSelector);n.addEventListener("input",(function(t){e._validateInput(t.target,o)}))}))}},{key:"clearErrors",value:function(){var e=this;this.inputs.forEach((function(t){return e._hideInputError(t.querySelector(e.allClasses.inputErrorSelector))}))}},{key:"toggleSubmitButtonState",value:function(){this.form.checkValidity()?this.submitButton.disabled=!1:this.submitButton.disabled=!0}},{key:"enableValidations",value:function(){this._addValidationsToInputs(),this.toggleSubmitButtonState()}}])&&t(n.prototype,o),e}();function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popup=document.querySelector(t),this.validator=n,this.submitButton=this.popup.querySelector('button[type="submit"]'),this.submitButton&&(this.defaultSubmitButtonText=this.submitButton.textContent),this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){27===e.keyCode&&this.close()}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this.popup.classList.add("popup_opened"),this.validator&&(this.validator.clearErrors(),this.validator.toggleSubmitButtonState())}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this.popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this.popup.querySelector(".popup__close-icon").addEventListener("click",this.close),this.popup.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()})),this.validator&&this.validator.enableValidations()}},{key:"updateSubmitButtonText",value:function(e){this.submitButton&&(this.submitButton.textContent=e)}},{key:"resetSubmitButtonText",value:function(){this.updateSubmitButtonText(this.defaultSubmitButtonText)}}])&&o(t.prototype,n),e}();function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(p,e);var t,n,o,r,i=(o=p,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(o);if(r){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function p(){return u(this,p),i.apply(this,arguments)}return t=p,(n=[{key:"open",value:function(e){s(f(p.prototype),"open",this).call(this);var t=this.popup.querySelector("img");t.src=e.target.src,t.alt=e.target.alt;var n=e.target.closest(".mesto-card").querySelector(".mesto-card__subtitle-name");this.popup.querySelector(".popup__text").textContent=n.textContent}}])&&a(t.prototype,n),p}(r);function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(o);if(r){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function u(e,t,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(o=i.call(this,e,n)).submitFormHandler=t,o.form=o.popup.querySelector("form"),o}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this.form.querySelectorAll("input").forEach((function(t){e[t.id]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;y(m(u.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){e.updateSubmitButtonText("Сохранение..."),e.submitFormHandler(t,e._getInputValues(),(function(){e.close(),e.resetSubmitButtonText()}))}))}},{key:"close",value:function(){y(m(u.prototype),"close",this).call(this),this.form.reset()}}])&&d(t.prototype,n),u}(r);function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(o);if(r){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).form=t.popup.querySelector("form"),t}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;g(C(u.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){t.preventDefault(),e.submitFormHandler(),e.close()}))}},{key:"open",value:function(e){g(C(u.prototype),"open",this).call(this),this.submitFormHandler=e}}])&&S(t.prototype,n),u}(r);function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var I=function(){function e(t){var n=t.baseUrl,o=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.headers=o}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch(this.baseUrl+"cards/",{headers:this.headers}).then(this._checkResponse)}},{key:"getInfoAboutPeople",value:function(){return fetch(this.baseUrl+"users/me/",{headers:this.headers}).then(this._checkResponse)}},{key:"updateEditProfile",value:function(e){return fetch(this.baseUrl+"users/me/",{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"updateEditAvatar",value:function(e){return fetch(this.baseUrl+"users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"addNewСard",value:function(e){return fetch(this.baseUrl+"cards",{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch(this.baseUrl+"cards/"+e,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}},{key:"updateLike",value:function(e,t){return fetch(this.baseUrl+"cards/likes/"+e,{method:t?"DELETE":"PUT",headers:this.headers}).then(this._checkResponse)}}])&&P(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var j=function(){function e(t){var n=t.nameSelector,o=t.aboutSelector,r=t.fotoSelector,i=t.handleClick,u=t.fotoInputSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.profileTitle=document.querySelector(n),this.profileSubtitle=document.querySelector(o),this.fotoContainer=document.querySelector(r),this.fotoInput=document.querySelector(u),this.handleClick=i}var t,n;return t=e,(n=[{key:"_updateUserInfoOnPage",value:function(){this.profileTitle.textContent=this.userInfo.name,this.profileSubtitle.textContent=this.userInfo.about,this.fotoInput.value=this.userInfo.avatar,this.fotoContainer.src=this.userInfo.avatar}},{key:"setUserInfo",value:function(e){this.userInfo=e,this._updateUserInfoOnPage()}},{key:"getUserInfo",value:function(){return this.userInfo}},{key:"setEventListeners",value:function(){var e=this;this.fotoContainer.addEventListener("click",(function(t){e._updateUserInfoOnPage(),e.handleClick(t)}))}},{key:"updateNameAndJob",value:function(e){var t=e.name,n=e.job;this.userInfo.name=t,this.userInfo.about=n,this._updateUserInfoOnPage()}},{key:"updateAvatarUrl",value:function(e){this.userInfo.avatar=e,this._updateUserInfoOnPage()}}])&&L(t.prototype,n),e}();function q(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var T=function(){function e(t,n){var o=t.api,r=t.renderer,i=t.userInfo;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.api=o,this.userInfo=i,this.renderer=r,this.container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"initCards",value:function(){var e=this;return this.api.getInitialCards().then((function(t){e.items=t,e.render()}))}},{key:"render",value:function(){var e=this,t=this.userInfo.getUserInfo();this.items.forEach((function(n){var o=e.renderer(n,t);e.addItem(o)}))}},{key:"addItem",value:function(e){this.container.prepend(e)}}])&&q(t.prototype,n),e}(),R={formSelector:".popup__input",submitButtonSelector:".popup__button",inputContainerSelector:".popup__name-container",inputSelector:".popup__name",inputErrorSelector:".popup__name.popup__name_type_err",disabledButtonSelector:".popup__container_new-card .popup__button",nameSelector:".profile__info-title",fotoContainer:".profile__foto",aboutSelector:".profile__info-subtitle"},B=document.querySelector(".profile").querySelector(".profile__button"),U=document.querySelector(".profile__button-add"),x=(document.querySelector(".mesto-card__trash"),document.querySelector(R.nameSelector),document.querySelector(".profile__info-subtitle"),document.querySelector("#name")),A=document.querySelector("#job");function D(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var V=function(){function e(t,n,o,r,i,u){var a=n.name,s=n.link,c=n.likes,l=n.id,f=n.owner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=l,this.api=t,this.name=a,this.link=s,this.likes=c,this.owner=f,this.currentUser=o,this.template=document.querySelector(r),this.handleCardClick=i,this.handleDeleteClick=u}var t,n;return t=e,(n=[{key:"_addLike",value:function(e){var t=e.target.closest(".mesto-card__subtitle-like").querySelector(".mesto-card__subtitle-icon-like");e.target.classList.contains("mesto-card__subtitle-icon_active")?this.api.updateLike(this.id,!0).then((function(n){e.target.classList.remove("mesto-card__subtitle-icon_active"),t.textContent=n.likes.length})).catch((function(e){console.error("Не удалось убрать лайк",e)})):this.api.updateLike(this.id).then((function(n){e.target.classList.add("mesto-card__subtitle-icon_active"),t.textContent=n.likes.length})).catch((function(e){console.error("Не удалось добавить лайк",e)}))}},{key:"_deleteCard",value:function(e){var t=e.target.closest(".mesto-card");this.api.deleteCard(this.id).then((function(){t.remove()})).catch((function(e){console.error("Не удалось удалить карточку",e)}))}},{key:"_onDeleteButtonClick",value:function(e){var t=this;this.handleDeleteClick((function(){t._deleteCard(e)}))}},{key:"_showPhoto",value:function(e){this.handleCardClick(e)}},{key:"_getTemplate",value:function(){return this.template.content.cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this;e.querySelector(".mesto-card__subtitle-icon").addEventListener("click",(function(e){return t._addLike(e)})),e.querySelector(".mesto-card__trash").addEventListener("click",(function(e){return t._onDeleteButtonClick(e)})),e.querySelector(".mesto-card__photo").addEventListener("click",(function(e){return t._showPhoto(e)}))}},{key:"_showTrash",value:function(e){this.currentUser._id===this.owner._id&&(e.querySelector(".mesto-card__trash").style.display="block")}},{key:"_showIsLiked",value:function(e){var t=this;this.likes.find((function(e){return e._id===t.currentUser._id}))&&e.querySelector(".mesto-card__subtitle-icon").classList.add("mesto-card__subtitle-icon_active")}},{key:"createMestoCard",value:function(){var e=this._getTemplate(),t=e.querySelector(".mesto-card__photo"),n=e.querySelector(".mesto-card__subtitle-icon-like");return t.src=this.link,t.alt=this.name,n.textContent=this.likes.length,e.querySelector(".mesto-card__subtitle-name").textContent=this.name,this._showTrash(e),this._showIsLiked(e),this._setEventListeners(e),e}}])&&D(t.prototype,n),e}();function N(e,t,n,o,r,i){return new V(G,{name:e,link:t,likes:n,id:o,owner:r},i,"#mesto-card",M.open,z.open).createMestoCard()}var H=".popup.popup_type_update",J=new _(H,(function(e,t,n){e.preventDefault(),G.updateEditAvatar(t["link-avatar"]).then((function(e){var t=e.avatar;n(),F.updateAvatarUrl(t)})).catch((function(e){console.error("Не удалось обновить аватар",e)}))}),new n(R,H)),F=new j({nameSelector:R.nameSelector,aboutSelector:R.aboutSelector,fotoSelector:R.fotoContainer,handleClick:J.open,fotoInputSelector:".popup__name.popup__name_type_update"}),M=new p(".popup.popup_type_image"),z=new O(".popup.popup_type_confirm"),G=new I({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-26/",headers:{authorization:"82256f25-365c-46ac-aa1f-a846129f6d77","Content-Type":"application/json","Access-Control-Allow-Methods":"POST, GET, DELETE"}}),Y=new T({api:G,renderer:function(e,t){var n=e.name,o=e.link,r=e.likes,i=e.owner;return N(n,o,r,e._id,i,t)},userInfo:F},".elements"),K=".popup.popup_type_edit",Q=new _(K,(function(e,t,n){e.preventDefault(),G.updateEditProfile({name:t.name,about:t.job}).then((function(e){var t=e.name,o=e.about;n(),F.updateNameAndJob({name:t,job:o})})).catch((function(e){console.error("Не удалось обновить профиль",e)}))}),new n(R,K)),W=".popup.popup_type_new-card",X=new _(W,(function(e,t,n){e.preventDefault();var o=t.mesto,r=t.link;G["addNewСard"]({name:o,link:r}).then((function(e){var t=e.name,o=e.owner,i=e.likes,u=e._id;n();var a=F.getUserInfo();Y.addItem(N(t,r,i,u,o,a))})).catch((function(e){console.error("Не удалось добавить новую карточку",e)}))}),new n(R,W));M.setEventListeners(),Q.setEventListeners(),X.setEventListeners(),z.setEventListeners(),J.setEventListeners(),F.setEventListeners(),B.addEventListener("click",(function(){!function(e,t,n){var o=e.getUserInfo(),r=o.name,i=o.about;t.value=r,n.value=i}(F,x,A),Q.open()})),U.addEventListener("click",X.open),G.getInfoAboutPeople().then((function(e){F.setUserInfo(e),Y.initCards().catch((function(e){console.error("Не удалось загрузить карточки",e)}))})).catch((function(e){console.error("Не удалось получить информацию о пользователе",e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,